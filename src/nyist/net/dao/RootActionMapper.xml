<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，它的作用就是对SQL进行分类化管理，可以理解为SQL隔离 注意：使用mapper代理开发时，namespace有特殊且重要的作用 -->
<mapper namespace="nyist.net.dao.RootActionMapper">

	<!-- 查看所有选课结果 -->	
	<select id="FindAllChoProList" resultType="nyist.net.po.StuChooseProject">
		SELECT * FROM sb;
	</select>

	<!-- 管理员审核课题 -->
	<select id="CheckAllProjects" resultType="nyist.net.po.Project">
		select *from biyeketi;
	</select>
	
	<!-- 管理老师 -->
	<select id="CheckAllTeachers" resultType="nyist.net.po.Teacher">
		select *from tea;
	</select>
	
	<!-- 管理学生 -->
	<select id="CheckAllStudents" resultType="nyist.net.po.Student">
		select *from stu;
	</select>
	
	<!-- 删除选题结果 -->
	<delete id="DeleteChoRes" parameterType="String">
		delete from sb where sno=#{id}
	</delete>
	
	<!-- 审核课题 -->
	<select id="SelectProject" parameterType="String" resultType="nyist.net.po.Project">
		select *from biyeketi where cno=#{id}
	</select>
	<insert id="PassProject" parameterType="nyist.net.po.SProject">
		insert into tb values(#{bno},#{bname},#{tno},#{tname});
	</insert>
	<delete id="DeleteBiyePro" parameterType="String">
		delete from biyeketi where cno=#{id}
	</delete>
	
	<!-- 查看教师 -->
	<select id="SelectTeacher" parameterType="String" resultType="nyist.net.po.Teacher">
		select *from tea where id=#{id}
	</select>
	
	<update id="UpdateTeachers" parameterType="nyist.net.po.Teacher">
		update tea set password=#{password},password2=#{password2},name=#{name},age=#{age},sex=#{sex},phone=#{phone} where id=#{id}
	</update>
	
	<!-- 删除 -->
	<delete id="DeleteTeacher" parameterType="String">
		delete from tea where id=#{id}
	</delete>
	
	<!-- 增加 -->
	<select id="SelectTeaId" parameterType="String" resultType="String">
		select id from tea where id=#{id}
	</select>
	<insert id="AddTea" parameterType="nyist.net.po.Teacher">
		insert into tea values(#{id},#{password},#{password2},#{name},#{age},#{sex},#{phone});
	</insert>
	
	<!-- 查找学生 -->
	<select id="SelectStudent" parameterType="String" resultType="nyist.net.po.Student">
		select *from stu where id=#{id}
	</select>
	
	<!-- 修改学生信息 -->
	<update id="ChangeStudent" parameterType="nyist.net.po.Student">
		update stu set password=#{password},password1=#{password1},name=#{name},age=#{age},sex=#{sex},class1=#{class1},prompt=#{prompt},email=#{email} where id=#{id}
	</update>
	
	<!-- 删除学生 -->
	<delete id="DeleteStudent" parameterType="String">
		delete from stu where id=#{id}
	</delete>
	
	<!-- 添加学生 -->
	<select id="SelectStuId" parameterType="String" resultType="String">
		select id from stu where id=#{id}
	</select>
	<insert id="AddStu" parameterType="nyist.net.po.Student">
		insert into stu values(#{id},#{password},#{password1},#{name},#{age},#{sex},#{class1},#{prompt},#{email});
	</insert>
</mapper>
