<!DOCTYPE mapper    
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，它的作用就是对SQL进行分类化管理，可以理解为SQL隔离 注意：使用mapper代理开发时，namespace有特殊且重要的作用 -->
<mapper namespace="nyist.net.dao.StudentActionMapper">

	<!-- 查看所有通过审核的课题 -->	
	<select id="FindStudentByIdList" resultType="nyist.net.po.SProject">
		SELECT * FROM tb;
	</select>
	
	<!-- 学生查看自己的选题结果 -->
	<select id="FindStudentByIdOne" parameterType="String" resultType="nyist.net.po.StuChooseProject">
		SELECT *FROM sb WHERE sno=#{id}
	</select>
	
	<!-- 学生查看自己的信息 -->
	<select id="FindStuInfById" parameterType="String" resultType="nyist.net.po.Student">
		select *from stu where id=#{id};
	</select>
	
	<!-- 检查学生是否选过题目 -->
	<select id="CheckChoose" parameterType="String" resultType="String">
		select sno from sb where sno=#{id};
	</select>
	<select id="FindProject" parameterType="String" resultType="nyist.net.po.SProject">
		select *from tb where bno=#{id};
	</select>
	<select id="FindStudent" parameterType="String" resultType="nyist.net.po.Student" >
		select *from stu where id=#{id};
	</select>
	<insert id="ChooseProject" parameterType="nyist.net.po.StuChooseProject" >
		insert into sb values(#{bno},#{bname},#{sno},#{sname},#{tno});
	</insert>
	
	<!-- 学生退选课题 -->
	<delete id="DeleteProject" parameterType="String">
		delete from sb where sno=#{id}
	</delete>
	
	<!-- 信息修改 -->
	<update id="UpdataStuInf" parameterType="nyist.net.po.Student">
		update stu set password=#{password},password1=#{password1},name=#{name},age=#{age},sex=#{sex},class1=#{class1},prompt=#{prompt},email=#{email} where id=#{id}
	</update>
</mapper>
